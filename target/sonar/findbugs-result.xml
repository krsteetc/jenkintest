<?xml version="1.0" encoding="UTF-8"?>

<BugCollection version="4.0.0" sequence="0" timestamp="1591015639000" analysisTimestamp="1591020530845" release="">
  <Project>
    <Jar>/Users/kristevs/dev/works/java/sonar_test/target/classes/hello/Hello.class</Jar>
    <AuxClasspathEntry>/Users/kristevs/dev/works/java/sonar_test/target/classes</AuxClasspathEntry>
    <AuxClasspathEntry>/Users/kristevs/dev/works/java/sonar_test/target/sonar/findbugs/annotations.jar</AuxClasspathEntry>
    <AuxClasspathEntry>/Users/kristevs/dev/works/java/sonar_test/target/sonar/findbugs/jsr305.jar</AuxClasspathEntry>
    <WrkDir>/Users/kristevs/dev/works/java/sonar_test/target/sonar</WrkDir>
  </Project>
  <BugInstance type="WEAK_MESSAGE_DIGEST_SHA1" priority="2" rank="7" abbrev="SECSHA1" category="SECURITY" instanceHash="3121be16de7431e190abe69f86ffb85b" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="328">
    <ShortMessage>SHA-1 is a weak hash function</ShortMessage>
    <LongMessage>This API SHA1 (SHA-1) is not a recommended cryptographic hash function</LongMessage>
    <Class classname="hello.Hello" primary="true">
      <SourceLine classname="hello.Hello" start="5" end="21" sourcefile="Hello.java" sourcepath="hello/Hello.java">
        <Message>At Hello.java:[lines 5-21]</Message>
      </SourceLine>
      <Message>In class hello.Hello</Message>
    </Class>
    <Method classname="hello.Hello" name="sha1" signature="()V" isStatic="true" primary="true">
      <SourceLine classname="hello.Hello" start="13" end="21" startBytecode="0" endBytecode="139" sourcefile="Hello.java" sourcepath="hello/Hello.java"/>
      <Message>In method hello.Hello.sha1()</Message>
    </Method>
    <SourceLine classname="hello.Hello" primary="true" start="13" end="13" startBytecode="2" endBytecode="2" sourcefile="Hello.java" sourcepath="hello/Hello.java">
      <Message>At Hello.java:[line 13]</Message>
    </SourceLine>
    <String value="SHA1">
      <Message>Value SHA1</Message>
    </String>
  </BugInstance>
  <BugCategory category="SECURITY">
    <Description>Security</Description>
  </BugCategory>
  <BugPattern type="WEAK_MESSAGE_DIGEST_SHA1" abbrev="SECSHA1" category="SECURITY" cweid="328">
    <ShortDescription>SHA-1 is a weak hash function</ShortDescription>
    <Details><![CDATA[
            
<p>The algorithms SHA-1 is not a recommended algorithm for hash password, for signature verification and other
uses. <b>PBKDF2</b> should be used to hash password for example.</p>

<blockquote>
    "<b>SHA-1 for digital signature generation:</b><br/>
    SHA-1 may only be used for digital signature generation where specifically allowed by NIST protocol-specific guidance.
    For all other applications, <u>SHA-1 shall not be used for digital signature generation</u>.<br/>
    <b>SHA-1 for digital signature verification:</b><br/>
    For digital signature verification, <u>SHA-1 is allowed for legacy-use</u>.<br/>
    [...]<br/>
    <b>SHA-224, SHA-256, SHA-384, SHA-512, SHA-512/224, and SHA-512/256</b>:<br/>
    The use of these hash functions is acceptable for all hash function applications."<br/>
    - <a href="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-131Ar2.pdf">NIST: Transitioning the Use of Cryptographic Algorithms and Key Lengths p.15</a>
</blockquote>
<blockquote>
    "The main idea of a PBKDF is to slow dictionary or brute force attacks on the passwords by increasing the time
    needed to test each password. An attacker with a list of likely passwords can evaluate the PBKDF using the known
    iteration counter and the salt. Since an attacker has to spend a significant amount of computing time for each try,
    it becomes harder to apply the dictionary or brute force attacks."<br/>
- <a href="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-132.pdf">NIST: Recommendation for Password-Based Key Derivation  p.12</a>

</blockquote>
<br/>
<p>
    <b>Vulnerable Code:</b><br/>
    <pre>MessageDigest sha1Digest = MessageDigest.getInstance("SHA1");
    sha1Digest.update(password.getBytes());
    byte[] hashValue = sha1Digest.digest();</pre>
    <br/>
    <pre>byte[] hashValue = DigestUtils.getSha1Digest().digest(password.getBytes());</pre>
</p>
<br/>
<p>
    <b>Solution (Using bouncy castle):</b><br/>
    <pre>public static byte[] getEncryptedPassword(String password, byte[] salt) throws NoSuchAlgorithmException, InvalidKeySpecException {
    PKCS5S2ParametersGenerator gen = new PKCS5S2ParametersGenerator(new SHA256Digest());
    gen.init(password.getBytes("UTF-8"), salt.getBytes(), 4096);
    return ((KeyParameter) gen.generateDerivedParameters(256)).getKey();
}</pre>
    <br/>
    <b>Solution (Java 8 and later):</b><br/>
    <pre>public static byte[] getEncryptedPassword(String password, byte[] salt) throws NoSuchAlgorithmException, InvalidKeySpecException {
    KeySpec spec = new PBEKeySpec(password.toCharArray(), salt, 4096, 256 * 8);
    SecretKeyFactory f = SecretKeyFactory.getInstance("PBKDF2WithHmacSHA256");
    return f.generateSecret(spec).getEncoded();
}</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://community.qualys.com/blogs/securitylabs/2014/09/09/sha1-deprecation-what-you-need-to-know">Qualys blog: SHA1 Deprecation: What You Need to Know</a><br/>
<a href="https://googleonlinesecurity.blogspot.ca/2014/09/gradually-sunsetting-sha-1.html">Google Online Security Blog: Gradually sunsetting SHA-1</a><br/>
<a href="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-131Ar2.pdf">NIST: Transitioning the Use of Cryptographic Algorithms and Key Lengths</a><br/>
<a href="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-132.pdf">NIST: Recommendation for Password-Based Key Derivation</a><br/>
<a href="https://stackoverflow.com/q/22580853/89769">Stackoverflow: Reliable implementation of PBKDF2-HMAC-SHA256 for Java</a><br/>
<a href="https://cwe.mitre.org/data/definitions/327.html">CWE-327: Use of a Broken or Risky Cryptographic Algorithm</a>
</p>

        ]]></Details>
  </BugPattern>
  <BugCode abbrev="SECSHA1">
    <Description>SHA-1 is a weak hash function</Description>
  </BugCode>
  <Errors errors="0" missingClasses="0"></Errors>
  <FindBugsSummary timestamp="Mon, 1 Jun 2020 14:47:19 +0200" total_classes="1" referenced_classes="14" total_bugs="1" total_size="15" num_packages="1" java_version="1.8.0_181" vm_version="25.181-b13" cpu_seconds="5.40" clock_seconds="1.26" peak_mbytes="322.68" alloc_mbytes="3641.00" gc_seconds="0.01" priority_2="1">
    <FileStats path="hello/Hello.java" bugCount="1" size="15" bugHash="6365228ea45f29242f544f57d4570a54"/>
    <PackageStats package="hello" total_bugs="1" total_types="1" total_size="15" priority_2="1">
      <ClassStats class="hello.Hello" sourceFile="Hello.java" interface="false" size="15" bugs="1" priority_2="1"/>
    </PackageStats>
    <FindBugsProfile>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.ClassInfoAnalysisEngine" totalMilliseconds="165" invocations="339" avgMicrosecondsPerInvocation="489" maxMicrosecondsPerInvocation="19418" standardDeviationMicrosecondsPerInvocation="1501"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.ClassDataAnalysisEngine" totalMilliseconds="85" invocations="340" avgMicrosecondsPerInvocation="251" maxMicrosecondsPerInvocation="2394" standardDeviationMicrosecondsPerInvocation="201"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FieldItemSummary" totalMilliseconds="39" invocations="14" avgMicrosecondsPerInvocation="2816" maxMicrosecondsPerInvocation="9116" standardDeviationMicrosecondsPerInvocation="2841"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.MethodGenFactory" totalMilliseconds="35" invocations="3" avgMicrosecondsPerInvocation="11924" maxMicrosecondsPerInvocation="34894" standardDeviationMicrosecondsPerInvocation="16243"/>
      <ClassProfile name="edu.umd.cs.findbugs.util.TopologicalSort" totalMilliseconds="27" invocations="307" avgMicrosecondsPerInvocation="90" maxMicrosecondsPerInvocation="4962" standardDeviationMicrosecondsPerInvocation="311"/>
      <ClassProfile name="edu.umd.cs.findbugs.OpcodeStack$JumpInfoFactory" totalMilliseconds="27" invocations="62" avgMicrosecondsPerInvocation="446" maxMicrosecondsPerInvocation="3201" standardDeviationMicrosecondsPerInvocation="565"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.JavaClassAnalysisEngine" totalMilliseconds="26" invocations="40" avgMicrosecondsPerInvocation="670" maxMicrosecondsPerInvocation="16986" standardDeviationMicrosecondsPerInvocation="2668"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FindNoSideEffectMethods" totalMilliseconds="22" invocations="14" avgMicrosecondsPerInvocation="1615" maxMicrosecondsPerInvocation="6921" standardDeviationMicrosecondsPerInvocation="1811"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.NoteDirectlyRelevantTypeQualifiers" totalMilliseconds="17" invocations="14" avgMicrosecondsPerInvocation="1217" maxMicrosecondsPerInvocation="4881" standardDeviationMicrosecondsPerInvocation="1375"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.OverridingEqualsNotSymmetrical" totalMilliseconds="16" invocations="14" avgMicrosecondsPerInvocation="1202" maxMicrosecondsPerInvocation="7781" standardDeviationMicrosecondsPerInvocation="2024"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FunctionsThatMightBeMistakenForProcedures" totalMilliseconds="15" invocations="14" avgMicrosecondsPerInvocation="1102" maxMicrosecondsPerInvocation="5736" standardDeviationMicrosecondsPerInvocation="1603"/>
      <ClassProfile name="com.h3xstream.findsecbugs.taintanalysis.TaintDataflowEngine" totalMilliseconds="15" invocations="3" avgMicrosecondsPerInvocation="5065" maxMicrosecondsPerInvocation="13461" standardDeviationMicrosecondsPerInvocation="5960"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.CFGFactory" totalMilliseconds="14" invocations="3" avgMicrosecondsPerInvocation="4828" maxMicrosecondsPerInvocation="12537" standardDeviationMicrosecondsPerInvocation="5480"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.ValueNumberDataflowFactory" totalMilliseconds="13" invocations="3" avgMicrosecondsPerInvocation="4630" maxMicrosecondsPerInvocation="11689" standardDeviationMicrosecondsPerInvocation="5045"/>
    </FindBugsProfile>
  </FindBugsSummary>
  <ClassFeatures></ClassFeatures>
  <History></History>
</BugCollection>
